{"version":3,"file":"MinecraftScriptDialogue.js","sources":["../scripts/script_dialogue/MinecraftScriptDialogue/Utils.ts","../scripts/script_dialogue/MinecraftScriptDialogue/ScriptDialogue.ts","../scripts/script_dialogue/MinecraftScriptDialogue/DualButtonScriptDialogue.ts","../scripts/script_dialogue/MinecraftScriptDialogue/MultiButtonScriptDialogue.ts","../scripts/script_dialogue/MinecraftScriptDialogue/InputScriptDialogue.ts"],"sourcesContent":["import { Player, RawMessage, system } from '@minecraft/server';\n\nexport const asyncWait = async (ticks: number): Promise<void> => {\n  return new Promise<void>((resolve) => {\n    system.runTimeout(() => {\n      resolve();\n    }, ticks);\n  });\n};\n\nexport const runUntilSuccess = (\n  target: Player,\n  command: string,\n  expectedCount: number,\n  stopIf: () => boolean\n): Promise<void> => {\n  return new Promise((resolve) => {\n    const handler = system.runInterval(() => {\n      const result = target.runCommand(command);\n      if (result.successCount === expectedCount || stopIf()) {\n        resolve();\n        system.clearRun(handler);\n      }\n    }, 1);\n  });\n};\n\n/**\n * Translation helper to make it easier to define a RawMessage with\n * translated text.\n *\n * @category Helpers\n * @param translate\n * @param with_\n * @constructor\n */\ninterface TranslateType {\n  (translate: string, with_: RawMessage): RawMessage;\n  (translate: string, ...with_: Array<string>): RawMessage;\n}\n\nexport const TRANSLATE: TranslateType = (\n  translate: string,\n  with_: string | RawMessage,\n  ...with__: Array<string>\n): RawMessage => {\n  return {\n    translate,\n    with: typeof with_ === 'string' ? [with_, ...with__] : with_,\n  };\n};\n","import { Player, RawMessage } from '@minecraft/server';\nimport { FormCancelationReason, FormRejectReason, FormResponse, FormRejectError } from '@minecraft/server-ui';\nimport { asyncWait, runUntilSuccess } from './Utils';\n\nexport interface Showable<T> {\n  show(player: Player): Promise<T>;\n}\n\n/**\n * Displayed text in dialogues - can be a string or a RawMessage used for translations\n *\n * @category Script dialogue\n */\nexport type ScriptDialogueString = string | RawMessage;\n\nconst DefaultShowDialogOptions: Readonly<OptionalShowDialogueOptions> = Object.freeze({\n  lockPlayerCamera: true,\n  busyRetriesCount: 5,\n  busyRetriesTick: 5,\n});\n\nexport interface OptionalShowDialogueOptions {\n  /**\n   * Locks the camera when opening a script dialogue. This prevents the camera from panning when moving the\n   * mouse/dragging on transitions.\n   * @defaultValue true\n   */\n  lockPlayerCamera: boolean;\n  /**\n   * Configures how many times retry the script dialogue if the player is busy.\n   * @see {@link busyRetriesTick}\n   * @defaultValue 5\n   */\n  busyRetriesCount: number;\n  /**\n   * Configures how long (in ticks) to wait between retries if the player is busy.\n   * @see {@link busyRetriesCount}\n   * @defaultValue 5\n   */\n  busyRetriesTick: number;\n}\n\ninterface RequiredShowDialogueOptions {\n  /**\n   * Player to show the script dialogue to\n   */\n  player: Player;\n}\n\n/**\n * Options used when opening a script dialogue.\n * Controls the targeted player, the use of the camera and if we want to wait if the user is busy.\n *\n * @category Script dialogue\n */\nexport interface ShowDialogueOptions extends Partial<OptionalShowDialogueOptions>, RequiredShowDialogueOptions {}\n\nexport interface ResolvedShowDialogueOptions extends RequiredShowDialogueOptions, OptionalShowDialogueOptions {}\n\n/**\n * Base class for all the script dialogues\n *\n * @category Script dialogue\n */\nexport abstract class ScriptDialogue<T extends ScriptDialogueResponse> {\n  protected constructor() {}\n\n  /**\n   * Opens the script dialogue. It requires the {@link ShowDialogueOptions#player player} as one of the options.\n   *\n   * You can configure displaying features by setting the optional values in the {@link ShowDialogueOptions options}\n   * @param options used to configure what and how to display the script dialogue.\n   *\n   * @see {@link ShowDialogueOptions}\n   */\n  async open(options: ShowDialogueOptions): Promise<T | DialogueCanceledResponse | DialogueRejectedResponse> {\n    const resolvedOptions = this.resolveShowDialogueOptions(options);\n\n    try {\n      if (resolvedOptions.lockPlayerCamera) {\n        this.lockPlayerCamera(resolvedOptions);\n      }\n\n      try {\n        const showable = await this.getShowable(resolvedOptions);\n        const response = await this.show(showable, resolvedOptions);\n        if (response.canceled) {\n          return new DialogueCanceledResponse(response.cancelationReason!);\n        }\n\n        return await this.processResponse(response, resolvedOptions);\n      } catch (e) {\n        if (e && e instanceof FormRejectError) {\n          return new DialogueRejectedResponse(e.reason, e);\n        } else {\n          return new DialogueRejectedResponse(undefined, e);\n        }\n      }\n    } finally {\n      if (resolvedOptions.lockPlayerCamera) {\n        await this.unlockPlayerCamera(resolvedOptions);\n      }\n    }\n  }\n\n  private async show<T extends FormResponse>(showable: Showable<T>, options: ResolvedShowDialogueOptions): Promise<T> {\n    let i = 0;\n    for (;;) {\n      const response = await showable.show(options.player);\n      if (response.canceled && response.cancelationReason === FormCancelationReason.UserBusy) {\n        if (i < options.busyRetriesCount) {\n          i++;\n          await asyncWait(options.busyRetriesTick);\n          if (options.player.isValid()) {\n            continue;\n          }\n        }\n      }\n\n      return response;\n    }\n  }\n\n  private lockPlayerCamera(options: ResolvedShowDialogueOptions) {\n    options.player.runCommand(`inputpermission set \"${options.player.name}\" camera disabled`);\n    options.player.runCommand(`inputpermission set \"${options.player.name}\" movement disabled`);\n  }\n\n  private async unlockPlayerCamera(options: ResolvedShowDialogueOptions) {\n    await runUntilSuccess(\n      options.player,\n      `inputpermission set \"${options.player.name}\" camera enabled`,\n      1,\n      () => !options.player.isValid()\n    );\n    await runUntilSuccess(\n      options.player,\n      `inputpermission set \"${options.player.name}\" movement enabled`,\n      1,\n      () => !options.player.isValid()\n    );\n  }\n\n  private resolveShowDialogueOptions(options: ShowDialogueOptions): ResolvedShowDialogueOptions {\n    return {\n      ...DefaultShowDialogOptions,\n      ...options,\n    };\n  }\n\n  protected abstract getShowable(options: ResolvedShowDialogueOptions): Showable<FormResponse>;\n  protected abstract processResponse(response: FormResponse, options: ResolvedShowDialogueOptions): Promise<T>;\n}\n\n/**\n * Base class for script dialogue responses\n *\n * @category Responses\n */\nexport abstract class ScriptDialogueResponse {}\n\n/**\n * Dialogue response when the script dialogue was canceled.\n *\n * Typically this happens if the player was busy when trying to open the script dialogue or if the user\n * pressed the close button (x).\n *\n * Valid reasons can be seen in {@link @minecraft/server-ui!FormCancelationReason FormCancelationReason}\n *\n * @category Responses\n */\nexport class DialogueCanceledResponse extends ScriptDialogueResponse {\n  /**\n   * Reason the script dialogue was cancel.\n   */\n  readonly reason: FormCancelationReason;\n\n  /**\n   * @internal\n   */\n  constructor(reason: FormCancelationReason) {\n    super();\n    this.reason = reason;\n  }\n}\n\n/**\n * Dialogue response when the script dialogue was rejected, throwing an exception.\n *\n * Reasons can be seen in {@link @minecraft/server-ui!FormRejectReason FormRejectReason} if any reason could be\n * determined.\n *\n * Known reasons can be seen in {@link @minecraft/server-ui!FormRejectReason FormRejectReason}\n * @category Responses\n */\nexport class DialogueRejectedResponse extends ScriptDialogueResponse {\n  /**\n   * Reason the script dialogue was rejected if there was any, else the {@link exception} needs to be checked\n   * to further determine what was the error.\n   */\n  readonly reason?: FormRejectReason;\n  /**\n   * Exception that was throw to rejected the script dialogue.\n   */\n  readonly exception: unknown;\n\n  /**\n   * @internal\n   */\n  constructor(reason: FormRejectReason | undefined, exception: unknown) {\n    super();\n    this.reason = reason;\n    this.exception = exception;\n  }\n}\n\n/**\n * Response for button script dialogues.\n *\n * Contains the selected button's name.\n *\n * @category Responses\n * @category Dual button script dialogue\n * @category Multi button script dialogue\n */\nexport class ButtonDialogueResponse<T extends string, CallbackResponse> extends ScriptDialogueResponse {\n  /**\n   * Selected button's name.\n   *\n   * @see {@link DualButton#name}\n   * @see {@link MultiButton#name}\n   */\n  readonly selected: T;\n\n  readonly callback?: CallbackResponse;\n\n  /**\n   * @internal\n   */\n  constructor(selected: T, callback?: CallbackResponse) {\n    super();\n    this.selected = selected;\n    this.callback = callback;\n  }\n}\n\nexport class MissingButtonsException extends Error {\n  constructor() {\n    super('Missing buttons');\n  }\n}\n","import {\n  ButtonDialogueResponse,\n  ResolvedShowDialogueOptions,\n  ScriptDialogue,\n  ScriptDialogueString,\n  Showable,\n} from './ScriptDialogue';\nimport { MessageFormData, MessageFormResponse } from '@minecraft/server-ui';\n\n/**\n * Dual button content.\n *\n * Note that dual buttons do not allow an icon to be used\n * @category Dual button script dialogue\n */\nexport interface DualButton<T extends string, CallbackResponse> {\n  /**\n   * Name used by the button, response is recorded using this name\n   */\n  name: T;\n  /**\n   * Displayed button's value\n   */\n  text: ScriptDialogueString;\n\n  /**\n   * A function that is executed when the button is pressed.\n   * This function is executed before returning from {@link DualButtonScriptDialogue#open}.\n   * @param selected\n   */\n  callback?: (selected: string) => Promise<CallbackResponse>;\n}\n\n/**\n * Creates a new dual button script dialogue\n *\n * @category Creation\n * @category Dual button script dialogue\n * @param title Title of the dual button script dialogue\n * @param topButton Contents of the top button\n * @param bottomButton Contents of the bottom button\n */\nexport const dualButtonScriptDialogue = <\n  T extends string,\n  TopCallbackResponse = undefined,\n  BottomCallbackResponse = undefined,\n>(\n  title: ScriptDialogueString,\n  topButton: DualButton<T, TopCallbackResponse>,\n  bottomButton: DualButton<T, BottomCallbackResponse>\n) => {\n  return new DualButtonScriptDialogue(title, undefined, topButton, bottomButton);\n};\n\n/**\n * Dual button script dialogue class.\n *\n * User's don't need to instantiate this class directly, instead they can use {@link dualButtonScriptDialogue}.\n *\n * Allows the users to optionally set a value for the body by calling {@link DualButtonScriptDialogue#setBody setBody}.\n *\n * @category Dual button script dialogue\n */\nexport class DualButtonScriptDialogue<\n  T extends string,\n  TopCallbackResponse,\n  BottomCallbackResponse,\n> extends ScriptDialogue<ButtonDialogueResponse<T, TopCallbackResponse | BottomCallbackResponse>> {\n  private readonly title: ScriptDialogueString;\n  private readonly body?: ScriptDialogueString;\n  private readonly topButton: DualButton<T, TopCallbackResponse>;\n  private readonly bottomButton: DualButton<T, BottomCallbackResponse>;\n\n  /**\n   * @internal\n   */\n  constructor(\n    title: ScriptDialogueString,\n    body: ScriptDialogueString | undefined,\n    topButton: DualButton<T, TopCallbackResponse>,\n    bottomButton: DualButton<T, BottomCallbackResponse>\n  ) {\n    super();\n    this.title = title;\n    this.body = body;\n    this.topButton = topButton;\n    this.bottomButton = bottomButton;\n  }\n\n  /**\n   * Sets content of the script dialogue\n   * @param body\n   */\n  setBody(body: ScriptDialogueString) {\n    return new DualButtonScriptDialogue(this.title, body, this.topButton, this.bottomButton);\n  }\n\n  protected getShowable(_options: ResolvedShowDialogueOptions): Showable<MessageFormResponse> {\n    const data = new MessageFormData();\n    data.title(this.title);\n    if (this.body) {\n      data.body(this.body);\n    }\n\n    data.button1(this.bottomButton.text);\n    data.button2(this.topButton.text);\n\n    return data;\n  }\n\n  protected async processResponse(response: MessageFormResponse, _options: ResolvedShowDialogueOptions) {\n    const selectedButton = response.selection === 0 ? this.bottomButton : this.topButton;\n    let callbackResponse: TopCallbackResponse | BottomCallbackResponse | undefined = undefined;\n    if (selectedButton.callback) {\n      callbackResponse = await selectedButton.callback(selectedButton.name);\n    }\n    return new ButtonDialogueResponse(selectedButton.name, callbackResponse);\n  }\n}\n","import { ActionFormData, ActionFormResponse } from '@minecraft/server-ui';\nimport {\n  ButtonDialogueResponse,\n  MissingButtonsException,\n  ResolvedShowDialogueOptions,\n  ScriptDialogue,\n  ScriptDialogueString,\n  Showable,\n} from './ScriptDialogue';\n\n/**\n * Initializes a empty multi button script dialogue.\n *\n * Buttons needs to be added using {@link MultiButtonDialogue#addButton} or {@link MultiButtonDialogue#addButtons}\n *\n * @category Creation\n * @category Multi button script dialogue\n * @param title\n */\nexport const multiButtonScriptDialogue = (title: ScriptDialogueString): MultiButtonDialogue<never, never> => {\n  return new MultiButtonDialogue(title, undefined, []);\n};\n\n/**\n * Multi button content.\n * @category Multi button script dialogue\n */\nexport interface MultiButton<T extends string, Callback> {\n  /**\n   * Name used by the button, response is recorded using this name\n   */\n  name: T;\n  /**\n   * Displayed button's value\n   */\n  text: ScriptDialogueString;\n  /**\n   * Path to an icon used for the icon\n   */\n  iconPath?: string;\n  /**\n   * A function that is executed when the button is pressed.\n   * This function is executed before returning from {@link MultiButtonDialogue#open}.\n   * @param selected\n   */\n  callback?: (selected: string) => Promise<Callback>;\n}\n\n/**\n * Class used to build multi button script dialogues.\n *\n * Use {@link multiButtonScriptDialogue} to initialize one.\n *\n * @category Multi button script dialogue\n * @see {@link multiButtonScriptDialogue}\n */\nexport class MultiButtonDialogue<T extends string, Callback = undefined> extends ScriptDialogue<\n  ButtonDialogueResponse<T, Callback>\n> {\n  private readonly title: ScriptDialogueString;\n  private readonly body?: ScriptDialogueString;\n  private readonly buttons: Array<MultiButton<T, Callback>>;\n\n  /**\n   * @internal\n   */\n  constructor(\n    title: ScriptDialogueString,\n    body: ScriptDialogueString | undefined,\n    buttons: Array<MultiButton<T, Callback>>\n  ) {\n    super();\n    this.title = title;\n    this.body = body;\n    this.buttons = buttons;\n  }\n\n  /**\n   * Sets the content body of the multi button dialogue\n   * @param body\n   */\n  setBody(body: ScriptDialogueString): MultiButtonDialogue<T, Callback> {\n    return new MultiButtonDialogue<T, Callback>(this.title, body, this.buttons);\n  }\n\n  /**\n   * Adds a button to the multi button script dialogue.\n   * @param name name of the button\n   * @param text content of the button\n   * @param iconPath path to an icon to show in the button\n   */\n  addButton<NAME extends string, ButtonCallback = undefined>(\n    name: NAME,\n    text: ScriptDialogueString,\n    iconPath?: string,\n    callback?: (selected: string) => Promise<ButtonCallback>\n  ): MultiButtonDialogue<NonNullable<T | NAME>, Callback | ButtonCallback> {\n    return new MultiButtonDialogue<NonNullable<T | NAME>, Callback | ButtonCallback>(this.title, this.body, [\n      ...this.buttons,\n      {\n        name,\n        text,\n        iconPath,\n        callback,\n      },\n    ]) as MultiButtonDialogue<NonNullable<T | NAME>, Callback | ButtonCallback>;\n  }\n\n  /**\n   * Adds multiple buttons to the multi button script dialogue.\n   * @param buttons array of buttons\n   */\n  addButtons<NAMES extends string, ButtonCallback = undefined>(\n    buttons: Array<MultiButton<NAMES, ButtonCallback>>\n  ): MultiButtonDialogue<NonNullable<T | NAMES>, Callback | ButtonCallback> {\n    return new MultiButtonDialogue<T | NAMES, Callback | ButtonCallback>(this.title, this.body, [\n      ...this.buttons,\n      ...buttons,\n    ]) as MultiButtonDialogue<NonNullable<T | NAMES>, Callback | ButtonCallback>;\n  }\n\n  protected getShowable(_options: ResolvedShowDialogueOptions): Showable<ActionFormResponse> {\n    if (this.buttons.length === 0) {\n      throw new MissingButtonsException();\n    }\n\n    const formData = new ActionFormData();\n\n    formData.title(this.title);\n\n    if (this.body) {\n      formData.body(this.body);\n    }\n\n    this.buttons.forEach((button) => {\n      formData.button(button.text, button.iconPath);\n    });\n\n    return formData;\n  }\n\n  protected async processResponse(\n    response: ActionFormResponse,\n    _options: ResolvedShowDialogueOptions\n  ): Promise<ButtonDialogueResponse<T, Callback>> {\n    const selectedButton = this.buttons[response.selection as number];\n    let callbackResponse: Callback | undefined = undefined;\n    if (selectedButton.callback) {\n      callbackResponse = await selectedButton.callback(selectedButton.name);\n    }\n    return new ButtonDialogueResponse<T, Callback>(selectedButton.name, callbackResponse);\n  }\n}\n","import { ResolvedShowDialogueOptions, ScriptDialogue, ScriptDialogueString, Showable } from './ScriptDialogue';\nimport { ModalFormData, ModalFormResponse } from '@minecraft/server-ui';\n\n/**\n * Type for each input's value.\n *\n * @category Input script dialogue\n */\nexport type InputValue = string | number | boolean;\n\n/**\n * Initializes a empty input script dialogue.\n *\n * Elements needs to be added using {@link InputScriptDialogue#addElement} or {@link InputScriptDialogue#addElements}\n *\n * @category Creation\n * @category Input script dialogue\n *\n * @param title Title for the script dialogue\n */\nexport const inputScriptDialogue = (title: ScriptDialogueString) => {\n  return new InputScriptDialogue<never>(title, []);\n};\n\n/**\n * Creates a new dropdown element to use in a input script dialogue.\n *\n * @category Input script dialogue\n * @param name\n * @param label\n */\nexport const inputDropdown = <K extends string>(name: K, label: ScriptDialogueString) => {\n  return new InputDropdown<K>(name, label, [], 0);\n};\n\n/**\n * Creates a new slider element to use in a input script dialogue.\n *\n * @category Input script dialogue\n * @param name\n * @param label\n * @param minimumValue\n * @param maximumValue\n * @param valueStep\n * @param defaultValue\n */\nexport const inputSlider = <K extends string>(\n  name: K,\n  label: ScriptDialogueString,\n  minimumValue: number,\n  maximumValue: number,\n  valueStep: number,\n  defaultValue?: number\n) => {\n  return new InputSlider<K>(name, label, minimumValue, maximumValue, valueStep, defaultValue);\n};\n\n/**\n * Creates a new text field element to use in a input script dialogue.\n *\n * @category Input script dialogue\n * @param name\n * @param label\n * @param placeholderText\n * @param defaultValue\n */\nexport const inputText = <K extends string>(\n  name: K,\n  label: ScriptDialogueString,\n  placeholderText: ScriptDialogueString,\n  defaultValue?: string\n) => {\n  return new InputText<K>(name, label, placeholderText, defaultValue);\n};\n\n/**\n * Creates a new toggle element to use in a input script dialogue.\n *\n * @category Input script dialogue\n * @param name\n * @param label\n * @param defaultValue\n */\nexport const inputToggle = <K extends string>(name: K, label: ScriptDialogueString, defaultValue?: boolean) => {\n  return new InputToggle<K>(name, label, defaultValue);\n};\n\n/**\n * Base for all input elements displayed in the input script dialogue.\n *\n * You don't need to instantiate this class directly, instead you can use any of the builder function\n * depending the type you want to use.\n *\n * @category Input script dialogue\n * @see {@link inputDropdown}\n * @see {@link inputSlider}\n * @see {@link inputToggle}\n * @see {@link inputText}\n */\nexport class InputElement<K extends string> {\n  /**\n   * @internal\n   */\n  readonly name: K;\n  /**\n   * @internal\n   */\n  readonly label: ScriptDialogueString;\n\n  /**\n   * @internal\n   */\n  constructor(name: K, label: ScriptDialogueString) {\n    this.name = name;\n    this.label = label;\n  }\n}\n\n/**\n * Base for all input elements that have a fixed default value.\n *\n * You don't need to instantiate this class directly, instead you can use any of the builder function\n * depending the type you want to use.\n *\n * @category Input script dialogue\n * @see {@link inputDropdown}\n * @see {@link inputSlider}\n * @see {@link inputToggle}\n * @see {@link inputText}\n */\nexport class InputWithDefaultValue<K extends string, V extends InputValue> extends InputElement<K> {\n  /**\n   * @internal\n   */\n  readonly defaultValue: V;\n\n  /**\n   * @internal\n   */\n  constructor(name: K, label: ScriptDialogueString, defaultValue: V) {\n    super(name, label);\n    this.defaultValue = defaultValue;\n  }\n}\n\n/**\n * @internal\n */\nexport class InputDropdownOption {\n  readonly label: ScriptDialogueString;\n  readonly value: InputValue;\n\n  constructor(label: ScriptDialogueString, value: InputValue) {\n    this.label = label;\n    this.value = value;\n  }\n}\n\n/**\n * Input element's representation of a dropdown.\n *\n * Instantiate by using {@link inputDropdown}\n *\n * @category Input script dialogue\n * @see {@link inputDropdown}\n */\nexport class InputDropdown<K extends string> extends InputElement<K> {\n  /**\n   * @internal\n   */\n  readonly options: ReadonlyArray<InputDropdownOption>;\n  /**\n   * @internal\n   */\n  readonly defaultValueIndex: number;\n\n  /**\n   * @internal\n   */\n  constructor(\n    name: K,\n    label: ScriptDialogueString,\n    options: ReadonlyArray<InputDropdownOption>,\n    defaultValueIndex?: number\n  ) {\n    super(name, label);\n    this.defaultValueIndex = defaultValueIndex ?? 0;\n    this.options = options;\n  }\n\n  /**\n   * Sets the default index of the option you would like to use\n   * @param defaultValueIndex\n   */\n  setDefaultValueIndex(defaultValueIndex: number) {\n    return new InputDropdown<K>(this.name, this.label, [...this.options], defaultValueIndex);\n  }\n\n  /**\n   * Adds an option to the dropdown\n   * @param label\n   * @param value\n   */\n  addOption(label: ScriptDialogueString, value: InputValue): InputDropdown<K> {\n    return new InputDropdown<K>(\n      this.name,\n      this.label,\n      [...this.options, new InputDropdownOption(label, value)],\n      this.defaultValueIndex\n    );\n  }\n}\n\n/**\n * Input element's representation of a slider.\n *\n * Instantiate by using {@link inputSlider}\n *\n * @category Input script dialogue\n * @see {@link inputSlider}\n */\nexport class InputSlider<K extends string> extends InputWithDefaultValue<K, number> {\n  /**\n   * @internal\n   */\n  readonly minimumValue: number;\n  /**\n   * @internal\n   */\n  readonly maximumValue: number;\n  /**\n   * @internal\n   */\n  readonly valueStep: number;\n\n  /**\n   * @internal\n   */\n  constructor(\n    name: K,\n    label: ScriptDialogueString,\n    minimumValue: number,\n    maximumValue: number,\n    valueStep: number,\n    defaultValue?: number\n  ) {\n    super(name, label, defaultValue ?? minimumValue);\n    this.minimumValue = minimumValue;\n    this.maximumValue = maximumValue;\n    this.valueStep = valueStep;\n  }\n}\n\n/**\n * Input element's representation of text field.\n *\n * Instantiate by using {@link inputText}\n *\n * @category Input script dialogue\n * @see {@link inputText}\n */\nexport class InputText<K extends string> extends InputWithDefaultValue<K, string> {\n  /**\n   * @internal\n   */\n  readonly placeholderText: ScriptDialogueString;\n\n  /**\n   * @internal\n   */\n  constructor(name: K, label: ScriptDialogueString, placeholderText: ScriptDialogueString, defaultValue?: string) {\n    super(name, label, defaultValue ?? '');\n    this.placeholderText = placeholderText;\n  }\n}\n\n/**\n * Input element's representation of toggle.\n *\n * Instantiate by using {@link inputToggle}\n *\n * @category Input script dialogue\n * @see {@link inputToggle}\n */\nexport class InputToggle<K extends string> extends InputWithDefaultValue<K, boolean> {\n  /**\n   * @internal\n   */\n  constructor(name: K, label: ScriptDialogueString, defaultValue?: boolean) {\n    super(name, label, !!defaultValue);\n  }\n}\n\n/**\n * Class used to build input script dialogues.\n *\n * Use {@link inputScriptDialogue} to initialize one.\n *\n * @category Input script dialogue\n * @see {@link inputScriptDialogue}\n */\nexport class InputScriptDialogue<K extends string> extends ScriptDialogue<InputScriptDialogueResponse<K>> {\n  private readonly elements: Array<InputElement<K>>;\n  private readonly title: ScriptDialogueString;\n  private readonly submitButton: ScriptDialogueString | undefined;\n\n  // work around TS2848: The right-hand side of an instanceof expression must not be an instantiation expression.\n  private readonly InputDropdown = InputDropdown<K>;\n  private readonly InputSlider = InputSlider<K>;\n  private readonly InputText = InputText<K>;\n  private readonly InputToggle = InputToggle<K>;\n\n  /**\n   * @internal\n   */\n  constructor(title: ScriptDialogueString, elements: Array<InputElement<K>>, submitButton?: ScriptDialogueString) {\n    super();\n    this.title = title;\n    this.elements = elements;\n    this.submitButton = submitButton;\n  }\n\n  withSubmitButton(submitButton?: ScriptDialogueString): InputScriptDialogue<K> {\n    return new InputScriptDialogue<K>(this.title, [...this.elements], submitButton);\n  }\n\n  /**\n   * Adds an input element to the input script dialogue.\n   * @param element\n   *\n   * @see {@link inputDropdown}\n   * @see {@link inputSlider}\n   * @see {@link inputToggle}\n   * @see {@link inputText}\n   */\n  addElement<KEY extends string>(element: InputElement<KEY>) {\n    return new InputScriptDialogue<K | KEY>(this.title, [...this.elements, element], this.submitButton);\n  }\n\n  /**\n   * Adds multiple input element to the input script dialogue.\n   * @param elements\n   *\n   * @see {@link inputDropdown}\n   * @see {@link inputSlider}\n   * @see {@link inputToggle}\n   * @see {@link inputText}\n   */\n  addElements<KEY extends string>(elements: Array<InputElement<KEY>>) {\n    return new InputScriptDialogue<K | KEY>(this.title, [...this.elements, ...elements], this.submitButton);\n  }\n\n  protected getShowable(_options: ResolvedShowDialogueOptions): Showable<ModalFormResponse> {\n    if (this.elements.length === 0) {\n      throw new MissingElementsError();\n    }\n\n    const data = new ModalFormData();\n\n    data.title(this.title);\n\n    if (this.submitButton) {\n      data.submitButton(this.submitButton);\n    }\n\n    this.elements.forEach((element) => {\n      if (element instanceof this.InputDropdown) {\n        if (element.options.length === 0) {\n          throw new MissingDropdownOptionsError(element.name);\n        }\n\n        data.dropdown(\n          element.label,\n          element.options.map((o) => o.label),\n          element.defaultValueIndex\n        );\n      } else if (element instanceof this.InputSlider) {\n        data.slider(element.label, element.minimumValue, element.maximumValue, element.valueStep, element.defaultValue);\n      } else if (element instanceof this.InputText) {\n        data.textField(element.label, element.placeholderText, element.defaultValue);\n      } else if (element instanceof this.InputToggle) {\n        data.toggle(element.label, element.defaultValue);\n      }\n    });\n\n    return data;\n  }\n\n  protected async processResponse(\n    response: ModalFormResponse,\n    _options: ResolvedShowDialogueOptions\n  ): Promise<InputScriptDialogueResponse<K>> {\n    const formValues = response.formValues ?? this.elements.map((_e) => undefined);\n\n    const values = this.elements.map((element, index) => {\n      const name = element.name;\n      let value: InputValue = 0;\n      const formValue = formValues[index];\n\n      if (element instanceof this.InputDropdown) {\n        value = element.options[element.defaultValueIndex].value;\n        if (formValue !== undefined) {\n          value = element.options[formValue as number].value;\n        }\n      } else if (\n        element instanceof this.InputSlider ||\n        element instanceof this.InputText ||\n        element instanceof this.InputToggle\n      ) {\n        value = element.defaultValue;\n        if (formValue !== undefined) {\n          value = formValue;\n        }\n      }\n\n      return {\n        [name]: value,\n      };\n    });\n\n    return new InputScriptDialogueResponse<K>(Object.assign({}, ...values));\n  }\n}\n\n/**\n * Dialogue response values, each value is indexed by the name of the button.\n * @category Input script dialogue\n */\nexport type InputScriptDialogueResponseValues<K extends string> = {\n  [key in K]: InputValue;\n};\n\n/**\n * Script dialogue response from a input script dialogue.\n * Holds a map with the values used by each of the element's name.\n *\n * @category Input script dialogue\n * @category Responses\n */\nexport class InputScriptDialogueResponse<K extends string> {\n  /**\n   * Map with the values of the script dialogue..\n   */\n  readonly values: InputScriptDialogueResponseValues<K>;\n\n  constructor(values: InputScriptDialogueResponseValues<K>) {\n    this.values = values;\n  }\n}\n\nexport class MissingElementsError extends Error {\n  constructor() {\n    super('Missing input elements');\n  }\n}\n\nexport class MissingDropdownOptionsError extends Error {\n  constructor(name: string) {\n    super(`Missing dropdown options for ${name}`);\n  }\n}\n"],"names":[],"mappings":"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"}